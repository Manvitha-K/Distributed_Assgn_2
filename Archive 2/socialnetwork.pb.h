// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: socialnetwork.proto

#ifndef PROTOBUF_socialnetwork_2eproto__INCLUDED
#define PROTOBUF_socialnetwork_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_socialnetwork_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[5];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsreqResponseImpl();
void InitDefaultsreqResponse();
void InitDefaultsfollowersListImpl();
void InitDefaultsfollowersList();
void InitDefaultsuserImpl();
void InitDefaultsuser();
void InitDefaultsfollowRequestImpl();
void InitDefaultsfollowRequest();
void InitDefaultsstatusImpl();
void InitDefaultsstatus();
inline void InitDefaults() {
  InitDefaultsreqResponse();
  InitDefaultsfollowersList();
  InitDefaultsuser();
  InitDefaultsfollowRequest();
  InitDefaultsstatus();
}
}  // namespace protobuf_socialnetwork_2eproto
namespace socialnetwork {
class followRequest;
class followRequestDefaultTypeInternal;
extern followRequestDefaultTypeInternal _followRequest_default_instance_;
class followersList;
class followersListDefaultTypeInternal;
extern followersListDefaultTypeInternal _followersList_default_instance_;
class reqResponse;
class reqResponseDefaultTypeInternal;
extern reqResponseDefaultTypeInternal _reqResponse_default_instance_;
class status;
class statusDefaultTypeInternal;
extern statusDefaultTypeInternal _status_default_instance_;
class user;
class userDefaultTypeInternal;
extern userDefaultTypeInternal _user_default_instance_;
}  // namespace socialnetwork
namespace socialnetwork {

// ===================================================================

class reqResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:socialnetwork.reqResponse) */ {
 public:
  reqResponse();
  virtual ~reqResponse();

  reqResponse(const reqResponse& from);

  inline reqResponse& operator=(const reqResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  reqResponse(reqResponse&& from) noexcept
    : reqResponse() {
    *this = ::std::move(from);
  }

  inline reqResponse& operator=(reqResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const reqResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const reqResponse* internal_default_instance() {
    return reinterpret_cast<const reqResponse*>(
               &_reqResponse_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(reqResponse* other);
  friend void swap(reqResponse& a, reqResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline reqResponse* New() const PROTOBUF_FINAL { return New(NULL); }

  reqResponse* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const reqResponse& from);
  void MergeFrom(const reqResponse& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(reqResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool success = 1;
  void clear_success();
  static const int kSuccessFieldNumber = 1;
  bool success() const;
  void set_success(bool value);

  // @@protoc_insertion_point(class_scope:socialnetwork.reqResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool success_;
  mutable int _cached_size_;
  friend struct ::protobuf_socialnetwork_2eproto::TableStruct;
  friend void ::protobuf_socialnetwork_2eproto::InitDefaultsreqResponseImpl();
};
// -------------------------------------------------------------------

class followersList : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:socialnetwork.followersList) */ {
 public:
  followersList();
  virtual ~followersList();

  followersList(const followersList& from);

  inline followersList& operator=(const followersList& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  followersList(followersList&& from) noexcept
    : followersList() {
    *this = ::std::move(from);
  }

  inline followersList& operator=(followersList&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const followersList& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const followersList* internal_default_instance() {
    return reinterpret_cast<const followersList*>(
               &_followersList_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(followersList* other);
  friend void swap(followersList& a, followersList& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline followersList* New() const PROTOBUF_FINAL { return New(NULL); }

  followersList* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const followersList& from);
  void MergeFrom(const followersList& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(followersList* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 followers = 1;
  int followers_size() const;
  void clear_followers();
  static const int kFollowersFieldNumber = 1;
  ::google::protobuf::int32 followers(int index) const;
  void set_followers(int index, ::google::protobuf::int32 value);
  void add_followers(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      followers() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_followers();

  // @@protoc_insertion_point(class_scope:socialnetwork.followersList)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > followers_;
  mutable int _followers_cached_byte_size_;
  mutable int _cached_size_;
  friend struct ::protobuf_socialnetwork_2eproto::TableStruct;
  friend void ::protobuf_socialnetwork_2eproto::InitDefaultsfollowersListImpl();
};
// -------------------------------------------------------------------

class user : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:socialnetwork.user) */ {
 public:
  user();
  virtual ~user();

  user(const user& from);

  inline user& operator=(const user& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  user(user&& from) noexcept
    : user() {
    *this = ::std::move(from);
  }

  inline user& operator=(user&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const user& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const user* internal_default_instance() {
    return reinterpret_cast<const user*>(
               &_user_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(user* other);
  friend void swap(user& a, user& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline user* New() const PROTOBUF_FINAL { return New(NULL); }

  user* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const user& from);
  void MergeFrom(const user& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(user* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 userId = 1;
  void clear_userid();
  static const int kUserIdFieldNumber = 1;
  ::google::protobuf::int32 userid() const;
  void set_userid(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:socialnetwork.user)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 userid_;
  mutable int _cached_size_;
  friend struct ::protobuf_socialnetwork_2eproto::TableStruct;
  friend void ::protobuf_socialnetwork_2eproto::InitDefaultsuserImpl();
};
// -------------------------------------------------------------------

class followRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:socialnetwork.followRequest) */ {
 public:
  followRequest();
  virtual ~followRequest();

  followRequest(const followRequest& from);

  inline followRequest& operator=(const followRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  followRequest(followRequest&& from) noexcept
    : followRequest() {
    *this = ::std::move(from);
  }

  inline followRequest& operator=(followRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const followRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const followRequest* internal_default_instance() {
    return reinterpret_cast<const followRequest*>(
               &_followRequest_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(followRequest* other);
  friend void swap(followRequest& a, followRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline followRequest* New() const PROTOBUF_FINAL { return New(NULL); }

  followRequest* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const followRequest& from);
  void MergeFrom(const followRequest& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(followRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // int32 followee = 1;
  void clear_followee();
  static const int kFolloweeFieldNumber = 1;
  ::google::protobuf::int32 followee() const;
  void set_followee(::google::protobuf::int32 value);

  // int32 follower = 2;
  void clear_follower();
  static const int kFollowerFieldNumber = 2;
  ::google::protobuf::int32 follower() const;
  void set_follower(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:socialnetwork.followRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int32 followee_;
  ::google::protobuf::int32 follower_;
  mutable int _cached_size_;
  friend struct ::protobuf_socialnetwork_2eproto::TableStruct;
  friend void ::protobuf_socialnetwork_2eproto::InitDefaultsfollowRequestImpl();
};
// -------------------------------------------------------------------

class status : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:socialnetwork.status) */ {
 public:
  status();
  virtual ~status();

  status(const status& from);

  inline status& operator=(const status& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  status(status&& from) noexcept
    : status() {
    *this = ::std::move(from);
  }

  inline status& operator=(status&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const status& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const status* internal_default_instance() {
    return reinterpret_cast<const status*>(
               &_status_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(status* other);
  friend void swap(status& a, status& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline status* New() const PROTOBUF_FINAL { return New(NULL); }

  status* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const status& from);
  void MergeFrom(const status& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(status* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string reply = 1;
  void clear_reply();
  static const int kReplyFieldNumber = 1;
  const ::std::string& reply() const;
  void set_reply(const ::std::string& value);
  #if LANG_CXX11
  void set_reply(::std::string&& value);
  #endif
  void set_reply(const char* value);
  void set_reply(const char* value, size_t size);
  ::std::string* mutable_reply();
  ::std::string* release_reply();
  void set_allocated_reply(::std::string* reply);

  // @@protoc_insertion_point(class_scope:socialnetwork.status)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr reply_;
  mutable int _cached_size_;
  friend struct ::protobuf_socialnetwork_2eproto::TableStruct;
  friend void ::protobuf_socialnetwork_2eproto::InitDefaultsstatusImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// reqResponse

// bool success = 1;
inline void reqResponse::clear_success() {
  success_ = false;
}
inline bool reqResponse::success() const {
  // @@protoc_insertion_point(field_get:socialnetwork.reqResponse.success)
  return success_;
}
inline void reqResponse::set_success(bool value) {
  
  success_ = value;
  // @@protoc_insertion_point(field_set:socialnetwork.reqResponse.success)
}

// -------------------------------------------------------------------

// followersList

// repeated int32 followers = 1;
inline int followersList::followers_size() const {
  return followers_.size();
}
inline void followersList::clear_followers() {
  followers_.Clear();
}
inline ::google::protobuf::int32 followersList::followers(int index) const {
  // @@protoc_insertion_point(field_get:socialnetwork.followersList.followers)
  return followers_.Get(index);
}
inline void followersList::set_followers(int index, ::google::protobuf::int32 value) {
  followers_.Set(index, value);
  // @@protoc_insertion_point(field_set:socialnetwork.followersList.followers)
}
inline void followersList::add_followers(::google::protobuf::int32 value) {
  followers_.Add(value);
  // @@protoc_insertion_point(field_add:socialnetwork.followersList.followers)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
followersList::followers() const {
  // @@protoc_insertion_point(field_list:socialnetwork.followersList.followers)
  return followers_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
followersList::mutable_followers() {
  // @@protoc_insertion_point(field_mutable_list:socialnetwork.followersList.followers)
  return &followers_;
}

// -------------------------------------------------------------------

// user

// int32 userId = 1;
inline void user::clear_userid() {
  userid_ = 0;
}
inline ::google::protobuf::int32 user::userid() const {
  // @@protoc_insertion_point(field_get:socialnetwork.user.userId)
  return userid_;
}
inline void user::set_userid(::google::protobuf::int32 value) {
  
  userid_ = value;
  // @@protoc_insertion_point(field_set:socialnetwork.user.userId)
}

// -------------------------------------------------------------------

// followRequest

// int32 followee = 1;
inline void followRequest::clear_followee() {
  followee_ = 0;
}
inline ::google::protobuf::int32 followRequest::followee() const {
  // @@protoc_insertion_point(field_get:socialnetwork.followRequest.followee)
  return followee_;
}
inline void followRequest::set_followee(::google::protobuf::int32 value) {
  
  followee_ = value;
  // @@protoc_insertion_point(field_set:socialnetwork.followRequest.followee)
}

// int32 follower = 2;
inline void followRequest::clear_follower() {
  follower_ = 0;
}
inline ::google::protobuf::int32 followRequest::follower() const {
  // @@protoc_insertion_point(field_get:socialnetwork.followRequest.follower)
  return follower_;
}
inline void followRequest::set_follower(::google::protobuf::int32 value) {
  
  follower_ = value;
  // @@protoc_insertion_point(field_set:socialnetwork.followRequest.follower)
}

// -------------------------------------------------------------------

// status

// string reply = 1;
inline void status::clear_reply() {
  reply_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& status::reply() const {
  // @@protoc_insertion_point(field_get:socialnetwork.status.reply)
  return reply_.GetNoArena();
}
inline void status::set_reply(const ::std::string& value) {
  
  reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:socialnetwork.status.reply)
}
#if LANG_CXX11
inline void status::set_reply(::std::string&& value) {
  
  reply_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:socialnetwork.status.reply)
}
#endif
inline void status::set_reply(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:socialnetwork.status.reply)
}
inline void status::set_reply(const char* value, size_t size) {
  
  reply_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:socialnetwork.status.reply)
}
inline ::std::string* status::mutable_reply() {
  
  // @@protoc_insertion_point(field_mutable:socialnetwork.status.reply)
  return reply_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* status::release_reply() {
  // @@protoc_insertion_point(field_release:socialnetwork.status.reply)
  
  return reply_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void status::set_allocated_reply(::std::string* reply) {
  if (reply != NULL) {
    
  } else {
    
  }
  reply_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), reply);
  // @@protoc_insertion_point(field_set_allocated:socialnetwork.status.reply)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace socialnetwork

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_socialnetwork_2eproto__INCLUDED
